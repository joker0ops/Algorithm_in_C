/****************************************************************************

排序基础：
1、 排序的稳定性：两个关键字相同的元素，经过排序后他们的相对位置不变
2、 排序算法
    内部排序：数据都存储在内存中，只关注算法的时间和空间复杂度
    外部排序：数据太多，无法全部放入内存（影响外排序性能的主要原因是内外存数据交换，不仅要关注算法，还要关注如何使读写磁盘次数更少）

几种常见的排序算法：
    插入排序
    算法思想：每次将一个待排序的记录按其关键字大小插入到前面已经排好序的子序列中，直到全部记录插入完成。

    希尔排序
    算法思想：先将一个待排序的记录变成部分有序的记录，再逐步逼近至全局有序

    快速排序
    算法思想：在待排序表中任取一个元素作为基准，通过一趟排序将待排序表划分为独立的两部分（不含基准元素），使得
    左半边的所有元素小于基准，右半边的元素都大于等于基准，最终将基准元素放在中间，这个过程称为一次划分。最后分
    别递归地对两个子表重复上述步骤，直至每部分只有一个元素或为空为止，此时所有元素均已排好序。

    冒泡排序
    算法思想：从最后两个元素开始相互比较，不断将小元素冒泡到前面的已排序序列，冒泡一趟全体元素可能都发生位置变化

    简单选择排序
    算法思想：总共n-1轮，每一轮找出未排序序列中最小的元素交换到已排序序列的末尾位置，每一轮只有该轮最小元素和已排序序列末尾变化

    堆排序
    算法思想：将数组看作一个顺序存储的完全二叉树（每个顺序存储的数组不管元素个数是多少一定能化为一个完全二叉树），并且该二叉树满足根节点的值大于左右孩子结点的值，联系二叉树顺序存储的规律
            1、前n/2个元素都是分支节点
            2、第i个元素的孩子结点分别为2i和2i+1
            3、第i个元素的父节点是i/2向下取整
    从第n/2个元素开始检查，看其是否满足大根堆的性质，不满足则将其最大的孩子结点交换（小元素逐层下坠），建堆的时间复杂度为O(n)
    排序的时间复杂度是O(nlogn)，总时间复杂度是O(n)+O(nlogn)=O(nlogn)，不稳定

    归并排序
    算法思想：归并指把两个或多个（k路归并）已经__有序__的序列合并成一个，归并排序核心操作是把数组内的两个有序序列合并成一个，k路归并每选出一个最小（或最大）元素需要对比k-1次

    基数排序
    算法思想：
    1、按个位元素进行分配，并且在分配过程中保持原来的队列顺序
    2、对已分配结果进行收集，收集过程中保持分配队列的顺序
    3、按十位元素进行分配
    4、收集
    5、按百位元素进行分配
    6、收集
    空间复杂度O(r)
    时间复杂度O(n+r)
    稳定性好并且不是基于比较的排序
    擅长处理的问题：
    1、数据元素关键字可以方便地拆分为d组，且d较小
    2、每组关键字的取值范围不大，及r较小
    3、数据元素个数n较大
    进行一趟分配，第10^(i-1)位元素按序排列，此位相同则第10^(i-2)位元素按序排列

    外部排序：操作系统以磁盘块为单位进行读写操作，数据读入内存后才可以被修改，修改完了写回磁盘

    败者树：

    胜者树：

其他概念：
基于交换的排序：根据序列中两个元素关键字的比较结果来交换这两个记录在列表中的位置，分为冒泡排序和快速排序

****************************************************************************/